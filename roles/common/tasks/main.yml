---
- name: Install common packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    name: "{{ common_packages }}"
    state: present

- name: Add SSH public key to authorized_keys
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ ssh_public_key }}"
    state: present

- name: Set timezone
  community.general.timezone:
    name: "{{ timezone }}"

- name: Configure system limits
  community.general.pam_limits:
    domain: "{{ ansible_user }}"
    limit_type: soft
    limit_item: nofile
    value: 65536

- name: Configure Raspberry Pi PoE Hat fan speeds
  ansible.builtin.blockinfile:
    path: /boot/firmware/config.txt
    prepend_newline: true
    block: |
      [all]
      # PoE Hat Fan Speeds
      dtparam=poe_fan_temp0=50000
      dtparam=poe_fan_temp1=60000
      dtparam=poe_fan_temp2=70000
      dtparam=poe_fan_temp3=80000
  when: hardware.type == "raspberry_pi"
  notify: Reboot required
  become: true

- name: Enable cgroups on Raspberry Pi
  ansible.builtin.replace:
    path: /boot/firmware/cmdline.txt
    regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
    replace: '\1 {{ item }}'
  loop:
    - cgroup_enable=cpuset
    - cgroup_enable=memory
    - cgroup_memory=1
  when: hardware.type == "raspberry_pi"
  notify: Reboot required
  become: true

- name: Check if chezmoi is installed
  ansible.builtin.command: chezmoi --version
  register: common_chezmoi_installed
  failed_when: false
  changed_when: false

- name: Get latest chezmoi release info
  ansible.builtin.uri:
    url: https://api.github.com/repos/twpayne/chezmoi/releases/latest
  register: common_chezmoi_release
  when: common_chezmoi_installed.rc != 0

- name: Download chezmoi package
  ansible.builtin.get_url:
    url: "https://github.com/twpayne/chezmoi/releases/download/{{ common_chezmoi_release.json.tag_name }}/{{ chezmoi_filename }}"
    dest: /tmp/chezmoi.deb
    mode: "0644"
  register: common_chezmoi_download
  when: common_chezmoi_installed.rc != 0
  vars:
    chezmoi_version: "{{ common_chezmoi_release.json.tag_name[1:] }}"
    chezmoi_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }}"
    chezmoi_filename: "chezmoi_{{ chezmoi_version }}_linux_{{ chezmoi_arch }}.deb"

- name: Install chezmoi package
  ansible.builtin.apt:
    deb: /tmp/chezmoi.deb
    state: present
  become: true
  when: common_chezmoi_installed.rc != 0 and common_chezmoi_download.changed

- name: Clean up chezmoi package
  ansible.builtin.file:
    path: /tmp/chezmoi.deb
    state: absent
  when: common_chezmoi_installed.rc != 0 and common_chezmoi_download.changed

- name: Initialize chezmoi with dotfiles repo
  ansible.builtin.command: "chezmoi init {{ chezmoi_repo }}"
  become: true
  become_user: "{{ ansible_user }}"
  args:
    creates: "/home/{{ ansible_user }}/.local/share/chezmoi"

- name: Update and apply chezmoi dotfiles
  ansible.builtin.command: chezmoi update
  become: true
  become_user: "{{ ansible_user }}"
  changed_when: false
